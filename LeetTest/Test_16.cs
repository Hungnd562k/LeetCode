using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LeetTest
{
    public class Test_16 : TestInit
    {
        [Fact]
        public void Case1()
        {
            int[] nums = [-1, 2, 1, -4];
            int target = 1;
            int expected = 2;
            int actual = _solution.ThreeSumClosest(nums, target);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void Case2()
        {
            int[] nums = [0, 0, 0];
            int target = 1;
            int expected = 0;
            int actual = _solution.ThreeSumClosest(nums, target);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void Case3()
        {
            int[] nums = [10, 20, 30, 40, 50, 60, 70, 80, 90];
            int target = 1;
            int expected = 60;
            int actual = _solution.ThreeSumClosest(nums, target);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void Case4()
        {
            int[] nums = [4, 0, 5, -5, 3, 3, 0, -4, -5];
            int target = -2;
            int expected = -2;
            int actual = _solution.ThreeSumClosest(nums, target);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void Case5()
        {
            int[] nums = [704, -923, 961, 506, 201, -809, 409, 358, 752, 432, 629, -869, -381, -678, 182, 431, 762, 828, -224, 131, -735, -892, -635, -969, 799, 11, -971, -797, -254, 345, 399, 831, 187, -146, 326, 213, -40, 57, 867, 513, -554, -951, 115, 68, -888, 203, -109, -641, -984, -314, -991, -674, 641, -886, 858, 165, 859, -802, -885, -500, 712, 476, -516, -186, 231, 502, 934, -999, 557, 700, 284, -580, -427, 320, -740, 965, 428, 240, 775, 617, 925, -975, -536, 119, 317, -403, 58, 566, 416, 264, 377, 954, -907, 219, 151, 603, 706, 350, -542, -891, -444, -859, 553, 833, 268, -945, 18, -43, 801, 579, -64, -538, 572, 105, 180, 637, 740, 866, -12, -646, 677, 539, 511, -102, 608, -84, 670, 979, 683, -286, 982, 609, -849, -240, 396, 720, -382, -271, 87, 294, -929, 395, 725, 766, 488, -434, -792, 590, 222, -835, -192, -691, 133, 249, -151, 255, 810, 308, -388, -583, 234, -130, 791, -986, -582, -168, -587, -652, 750, 271, 807, 649, 142, 622, -505, 369, 443, 551, 588, -447, -492, -285, -796, 44, -401, -920, 138, 172, 945, -841, 996, -392, 953, 198, -703, 218, -209, 623, 174, -912, 977, -175, -66, 481, 757, -689, 3, 35, -354, -660, 492, 454, -166, 144, -322, 923, 199, 319, 140, -324, -451, 298, -276, 967, 8, -750, -48, 179, 690, 14, -620, 462, -409, -653, -53, 550, 680, -917, 465, -980, -539, -173, -30, 490, -389, -632, 159, -277, 455, -820, 489, -19, 259, -514, 435, -278, -197, 17, 276, -205, 938, -806, -65, -585, 795, -900, -846, 221, 417, -742, -472, -563, 658, -41, -237, 638, -361, 545, -930, -312, -264, 365, -974, -748, 803, 600, 581, -864, -762, -301, 327, -485, -363, 450, -317, 63, 531, 875, -546, -180, 325, -791, 760, -230, 883, 370, -884, -31, 632, -941, -614, -898, 842, 587, -172, -610, 621, 972, -245, -719, -593, 51, 59, -115, 536, 410, 774, -843, 53, 963, -327, -133, -654, -357, 903, -565, 49, -436, -85, -74, -560, 306, 406, 789, 605, -183, -249, -235, 42, 155, 80, 682, 340, 855, 653, -138, 738, 612, 297, 804, 61, -70, 121, 830, 947, 149, -343, -687, 591, -793, -771, -714, 697, -337, 715, -815, -673, 256, 123, 415, -143, 905, -978, 598, -368, 102, -788, 522, 478, -142, -716, -621, 895, 456, -870, 67, 957, -73, -836, -414, 794, 530, -639, 457, -766, 166, -607, 315, 34, 279, -352, -50, -325, -174, -631, 868, -837, 655, 673, -880, 917, -540, 223, 671, 316, -894, 664, 817, 787, 642, 300, -47, -162, 716, 69, -120, 507, 684, -656, 408, -273, -221, -541, 77, -425, 116, -555, 376, 780, -114, 499, 143, 517, 614, -496, 301, 430, 434, 863, -63, 896, 4, -263, -746, 122, -823, -780, 460, 420, 733, -2, -502, 765, 175, 971, 932, -307, 758, 190, -958, 920, 548, -838, 773, -711, -931, -959, 942, -928, -914, -910, -448, -20, 764, 533, -490, -375, 926, 411, -598];
            int target = -8951;
            int expected = -2976;
            int actual = _solution.ThreeSumClosest(nums, target);

            Assert.Equal(expected, actual);
        }
    }
}
